const addBooksCsv = async (req, res, err) => {
  try {
    const filepath = req.file.path;
    const token = req.headers.authorization;
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    const sellerId = decoded.userId;

    if (!filepath) {
      return res.status(400).send("No file were uploaded");
    }

    const books = [];

    fs.createReadStream(filepath)
      .pipe(csv())
      .on("data", (row) => {
        books.push({
          title: row.title,
          author: row.author,
          publishedDate: new Date(row.publishedDate),
          price: parseFloat(row.price),
          sellerId: sellerId,
        });
      })
      .on("end", async () => {
        try {
          await prisma.book.createMany({
            data: books,
          });
        } catch (error) {
          console.log(error);
          return res.status(500).send("Internalll server error");
        }
      });
  } catch (err) {
    console.error(err);
    return res.status(500).send("Internal server error");
  }
};
